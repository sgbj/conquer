// <auto-generated />
using Conquer.Game.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Conquer.Game.Migrations
{
    [DbContext(typeof(GameDbContext))]
    partial class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.4.23259.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Conquer.Game.Models.DynaNpc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte>("Base")
                        .HasColumnType("tinyint");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<long>("Life")
                        .HasColumnType("bigint");

                    b.Property<long>("LookFace")
                        .HasColumnType("bigint");

                    b.Property<byte>("MagicDef")
                        .HasColumnType("tinyint");

                    b.Property<long>("MapId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<byte>("OwnerType")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Sort")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DynaNpcs");
                });

            modelBuilder.Entity("Conquer.Game.Models.Enemy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EnemyPlayerId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EnemyPlayerId");

                    b.ToTable("Enemies");
                });

            modelBuilder.Entity("Conquer.Game.Models.Friend", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FriendPlayerId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FriendPlayerId");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("Conquer.Game.Models.Generator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("BoundCx")
                        .HasColumnType("int");

                    b.Property<int>("BoundCy")
                        .HasColumnType("int");

                    b.Property<int>("BoundX")
                        .HasColumnType("int");

                    b.Property<int>("BoundY")
                        .HasColumnType("int");

                    b.Property<long>("MapId")
                        .HasColumnType("bigint");

                    b.Property<int>("MaxNpc")
                        .HasColumnType("int");

                    b.Property<int>("MaxPerGen")
                        .HasColumnType("int");

                    b.Property<long>("MonsterTypeId")
                        .HasColumnType("bigint");

                    b.Property<int>("RestSecs")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Generators");
                });

            modelBuilder.Entity("Conquer.Game.Models.Guild", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Fund")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("Conquer.Game.Models.GuildAlly", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AllyGuildId")
                        .HasColumnType("bigint");

                    b.Property<long>("GuildId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("GuildAllies");
                });

            modelBuilder.Entity("Conquer.Game.Models.GuildEnemy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EnemyGuildId")
                        .HasColumnType("bigint");

                    b.Property<long>("GuildId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("GuildEnemies");
                });

            modelBuilder.Entity("Conquer.Game.Models.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("AmountLimit")
                        .HasColumnType("int");

                    b.Property<byte>("Bless")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Enchant")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Gem1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Gem2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Ident")
                        .HasColumnType("tinyint");

                    b.Property<long>("ItemTypeId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Magic1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Magic2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Magic3")
                        .HasColumnType("tinyint");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Position")
                        .HasColumnType("tinyint");

                    b.Property<long>("Restrain")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Conquer.Game.Models.ItemAddition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<short>("AttackMax")
                        .HasColumnType("smallint");

                    b.Property<short>("AttackMin")
                        .HasColumnType("smallint");

                    b.Property<short>("Defense")
                        .HasColumnType("smallint");

                    b.Property<short>("Dexterity")
                        .HasColumnType("smallint");

                    b.Property<short>("Dodge")
                        .HasColumnType("smallint");

                    b.Property<long>("ItemTypeId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<short>("Life")
                        .HasColumnType("smallint");

                    b.Property<short>("MagicAtk")
                        .HasColumnType("smallint");

                    b.Property<short>("MagicDef")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("ItemAdditions");
                });

            modelBuilder.Entity("Conquer.Game.Models.ItemType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("AmountLimit")
                        .HasColumnType("int");

                    b.Property<int>("AtkRange")
                        .HasColumnType("int");

                    b.Property<int>("AtkSpeed")
                        .HasColumnType("int");

                    b.Property<int>("AttackMax")
                        .HasColumnType("int");

                    b.Property<int>("AttackMin")
                        .HasColumnType("int");

                    b.Property<short>("Defense")
                        .HasColumnType("smallint");

                    b.Property<short>("Dexterity")
                        .HasColumnType("smallint");

                    b.Property<short>("Dodge")
                        .HasColumnType("smallint");

                    b.Property<byte>("Gem1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Gem2")
                        .HasColumnType("tinyint");

                    b.Property<short>("Life")
                        .HasColumnType("smallint");

                    b.Property<byte>("Magic1")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Magic2")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Magic3")
                        .HasColumnType("tinyint");

                    b.Property<int>("MagicAtk")
                        .HasColumnType("int");

                    b.Property<int>("MagicDef")
                        .HasColumnType("int");

                    b.Property<short>("Mana")
                        .HasColumnType("smallint");

                    b.Property<byte>("Monopoly")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("ReqForce")
                        .HasColumnType("int");

                    b.Property<int>("ReqHealth")
                        .HasColumnType("int");

                    b.Property<byte>("ReqLevel")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ReqProfession")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ReqSex")
                        .HasColumnType("tinyint");

                    b.Property<int>("ReqSoul")
                        .HasColumnType("int");

                    b.Property<int>("ReqSpeed")
                        .HasColumnType("int");

                    b.Property<byte>("ReqWeaponSkill")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int>("Task")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("Conquer.Game.Models.LevelExp", b =>
                {
                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<long>("Exp")
                        .HasColumnType("bigint");

                    b.HasKey("Level");

                    b.ToTable("LevelExps");
                });

            modelBuilder.Entity("Conquer.Game.Models.Magic", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Experience")
                        .HasColumnType("bigint");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Magics");
                });

            modelBuilder.Entity("Conquer.Game.Models.MagicType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ActiveTimes")
                        .HasColumnType("bigint");

                    b.Property<byte>("AutoActive")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AutoLearn")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Crime")
                        .HasColumnType("tinyint");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Distance")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DropWeapon")
                        .HasColumnType("tinyint");

                    b.Property<long>("FloorAttr")
                        .HasColumnType("bigint");

                    b.Property<byte>("Ground")
                        .HasColumnType("tinyint");

                    b.Property<string>("GroundEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IntoneDuration")
                        .HasColumnType("int");

                    b.Property<string>("IntoneEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntoneSound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LearnLevel")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<byte>("Multi")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NextMagic")
                        .HasColumnType("int");

                    b.Property<int>("NextMagicDelay")
                        .HasColumnType("int");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<byte>("Range")
                        .HasColumnType("tinyint");

                    b.Property<long>("RequiredExp")
                        .HasColumnType("bigint");

                    b.Property<byte>("RequiredLevel")
                        .HasColumnType("tinyint");

                    b.Property<int>("RequiredProf")
                        .HasColumnType("int");

                    b.Property<long>("ScreenRepresent")
                        .HasColumnType("bigint");

                    b.Property<int>("SenderAction")
                        .HasColumnType("int");

                    b.Property<string>("SenderEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderSound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Sort")
                        .HasColumnType("tinyint");

                    b.Property<long>("Status")
                        .HasColumnType("bigint");

                    b.Property<long>("StepSecs")
                        .HasColumnType("bigint");

                    b.Property<byte>("Success")
                        .HasColumnType("tinyint");

                    b.Property<long>("Target")
                        .HasColumnType("bigint");

                    b.Property<long>("TargetDelay")
                        .HasColumnType("bigint");

                    b.Property<string>("TargetEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetSound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TargetWoundDelay")
                        .HasColumnType("bigint");

                    b.Property<string>("TraceEffect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpgradeDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("UsableInMarket")
                        .HasColumnType("tinyint");

                    b.Property<byte>("UseEp")
                        .HasColumnType("tinyint");

                    b.Property<long>("UseItem")
                        .HasColumnType("bigint");

                    b.Property<byte>("UseItemNum")
                        .HasColumnType("tinyint");

                    b.Property<int>("UseMp")
                        .HasColumnType("int");

                    b.Property<byte>("UseXp")
                        .HasColumnType("tinyint");

                    b.Property<byte>("WeaponHit")
                        .HasColumnType("tinyint");

                    b.Property<int>("WeaponSubtype")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MagicTypes");
                });

            modelBuilder.Entity("Conquer.Game.Models.Map", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BgMusic")
                        .HasColumnType("bigint");

                    b.Property<long>("BgMusicShow")
                        .HasColumnType("bigint");

                    b.Property<string>("DescribeText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocId")
                        .HasColumnType("int");

                    b.Property<long>("Light")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortalX")
                        .HasColumnType("int");

                    b.Property<int>("PortalY")
                        .HasColumnType("int");

                    b.Property<long>("RebornMap")
                        .HasColumnType("bigint");

                    b.Property<long>("RebornPortal")
                        .HasColumnType("bigint");

                    b.Property<long>("Type")
                        .HasColumnType("bigint");

                    b.Property<long>("Weather")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("Conquer.Game.Models.MonsterType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte>("AiType")
                        .HasColumnType("tinyint");

                    b.Property<long>("AttackMax")
                        .HasColumnType("bigint");

                    b.Property<long>("AttackMin")
                        .HasColumnType("bigint");

                    b.Property<byte>("AttackRange")
                        .HasColumnType("tinyint");

                    b.Property<int>("AttackSpeed")
                        .HasColumnType("int");

                    b.Property<byte>("AttackUser")
                        .HasColumnType("tinyint");

                    b.Property<long>("Defense")
                        .HasColumnType("bigint");

                    b.Property<byte>("Dexterity")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Dodge")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DropArmet")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DropArmor")
                        .HasColumnType("tinyint");

                    b.Property<long>("DropHp")
                        .HasColumnType("bigint");

                    b.Property<long>("DropMoney")
                        .HasColumnType("bigint");

                    b.Property<long>("DropMp")
                        .HasColumnType("bigint");

                    b.Property<byte>("DropNecklace")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DropRing")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DropShield")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DropShoes")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DropWeapon")
                        .HasColumnType("tinyint");

                    b.Property<int>("EscapeLife")
                        .HasColumnType("int");

                    b.Property<int>("ExtraDamage")
                        .HasColumnType("int");

                    b.Property<int>("ExtraExp")
                        .HasColumnType("int");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<int>("Life")
                        .HasColumnType("int");

                    b.Property<long>("Look")
                        .HasColumnType("bigint");

                    b.Property<long>("MagicDef")
                        .HasColumnType("bigint");

                    b.Property<long>("MagicHitRate")
                        .HasColumnType("bigint");

                    b.Property<long>("MagicType")
                        .HasColumnType("bigint");

                    b.Property<int>("MoveSpeed")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RunSpeed")
                        .HasColumnType("int");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ViewRange")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("MonsterTypes");
                });

            modelBuilder.Entity("Conquer.Game.Models.Npc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte>("Base")
                        .HasColumnType("tinyint");

                    b.Property<long>("LookFace")
                        .HasColumnType("bigint");

                    b.Property<long>("MapId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Sort")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Npcs");
                });

            modelBuilder.Entity("Conquer.Game.Models.Passway", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("MapId")
                        .HasColumnType("bigint");

                    b.Property<long>("PasswayIdx")
                        .HasColumnType("bigint");

                    b.Property<long>("PortalIdx")
                        .HasColumnType("bigint");

                    b.Property<int>("PortalMapId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Passways");
                });

            modelBuilder.Entity("Conquer.Game.Models.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1000001L);

                    b.Property<int>("AttributePoints")
                        .HasColumnType("int");

                    b.Property<int>("Avatar")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<decimal>("Experience")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long>("GuildDonation")
                        .HasColumnType("bigint");

                    b.Property<long?>("GuildId")
                        .HasColumnType("bigint");

                    b.Property<byte>("GuildRank")
                        .HasColumnType("tinyint");

                    b.Property<int>("Hair")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<int>("Magic")
                        .HasColumnType("int");

                    b.Property<int>("Mana")
                        .HasColumnType("int");

                    b.Property<long>("MapId")
                        .HasColumnType("bigint");

                    b.Property<long>("Model")
                        .HasColumnType("bigint");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PkMode")
                        .HasColumnType("int");

                    b.Property<short>("PkPoints")
                        .HasColumnType("smallint");

                    b.Property<int>("Profession")
                        .HasColumnType("int");

                    b.Property<byte>("Rebirths")
                        .HasColumnType("tinyint");

                    b.Property<long?>("SpouseId")
                        .HasColumnType("bigint");

                    b.Property<long>("Status")
                        .HasColumnType("bigint");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vitality")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("SpouseId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Conquer.Game.Models.PointAllot", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Force")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Profession")
                        .HasColumnType("tinyint");

                    b.Property<int>("Soul")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PointAllots");
                });

            modelBuilder.Entity("Conquer.Game.Models.Portal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Idx")
                        .HasColumnType("bigint");

                    b.Property<long>("MapId")
                        .HasColumnType("bigint");

                    b.Property<int>("PortalX")
                        .HasColumnType("int");

                    b.Property<int>("PortalY")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Portals");
                });

            modelBuilder.Entity("Conquer.Game.Models.ShopItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ItemTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("NpcId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ShopItems");
                });

            modelBuilder.Entity("Conquer.Game.Models.WeaponSkill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Experience")
                        .HasColumnType("bigint");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("WeaponSkills");
                });

            modelBuilder.Entity("Conquer.Game.Models.WeaponSkillExp", b =>
                {
                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<long>("Experience")
                        .HasColumnType("bigint");

                    b.HasKey("Level");

                    b.ToTable("WeaponSkillExps");
                });

            modelBuilder.Entity("Conquer.Game.Models.WeaponSkillName", b =>
                {
                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Type"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Type");

                    b.ToTable("WeaponSkillNames");
                });

            modelBuilder.Entity("Conquer.Game.Models.Enemy", b =>
                {
                    b.HasOne("Conquer.Game.Models.Player", "EnemyPlayer")
                        .WithMany()
                        .HasForeignKey("EnemyPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnemyPlayer");
                });

            modelBuilder.Entity("Conquer.Game.Models.Friend", b =>
                {
                    b.HasOne("Conquer.Game.Models.Player", "FriendPlayer")
                        .WithMany()
                        .HasForeignKey("FriendPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FriendPlayer");
                });

            modelBuilder.Entity("Conquer.Game.Models.GuildAlly", b =>
                {
                    b.HasOne("Conquer.Game.Models.Guild", null)
                        .WithMany("Allies")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Conquer.Game.Models.GuildEnemy", b =>
                {
                    b.HasOne("Conquer.Game.Models.Guild", null)
                        .WithMany("Enemies")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Conquer.Game.Models.Item", b =>
                {
                    b.HasOne("Conquer.Game.Models.Player", null)
                        .WithMany("Items")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Conquer.Game.Models.Magic", b =>
                {
                    b.HasOne("Conquer.Game.Models.Player", null)
                        .WithMany("Magics")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Conquer.Game.Models.Player", b =>
                {
                    b.HasOne("Conquer.Game.Models.Guild", "Guild")
                        .WithMany("Members")
                        .HasForeignKey("GuildId");

                    b.HasOne("Conquer.Game.Models.Player", "Spouse")
                        .WithMany()
                        .HasForeignKey("SpouseId");

                    b.Navigation("Guild");

                    b.Navigation("Spouse");
                });

            modelBuilder.Entity("Conquer.Game.Models.WeaponSkill", b =>
                {
                    b.HasOne("Conquer.Game.Models.Player", null)
                        .WithMany("WeaponSkills")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Conquer.Game.Models.Guild", b =>
                {
                    b.Navigation("Allies");

                    b.Navigation("Enemies");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("Conquer.Game.Models.Player", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Magics");

                    b.Navigation("WeaponSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
